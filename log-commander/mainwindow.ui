<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>949</width>
    <height>599</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Minimum" vsizetype="Minimum">
    <horstretch>0</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="font">
   <font>
    <pointsize>12</pointsize>
   </font>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <widget class="QWidget" name="centralWidget">
   <layout class="QGridLayout" name="gridLayout_2">
    <item row="0" column="0">
     <widget class="QTabWidget" name="tabWidget">
      <property name="styleSheet">
       <string notr="true">QTabWidget::pane { /* The tab widget frame */
         border-top: 2px solid #C2C7CB;
     }

     QTabWidget::tab-bar {
         left: 5px; /* move to the right by 5px */
     }

     /* Style the tab using the tab sub-control. Note that
         it reads QTabBar _not_ QTabWidget */
     QTabBar::tab {
         background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                     stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
         border: 2px solid #C4C4C3;
         border-bottom-color: #C2C7CB; /* same as the pane color */
         border-top-left-radius: 4px;
         border-top-right-radius: 4px;
         min-width: 8ex;
         padding: 2px;
     }

     QTabBar::tab:selected, QTabBar::tab:hover {
         background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #fafafa, stop: 0.4 #f4f4f4,
                                     stop: 0.5 #e7e7e7, stop: 1.0 #fafafa);
     }

     QTabBar::tab:selected {
         border-color: #9B9B9B;
         border-bottom-color: #C2C7CB; /* same as pane color */
     }

     QTabBar::tab:!selected {
         margin-top: 2px; /* make non-selected tabs look smaller */
     }

     /* make use of negative margins for overlapping tabs */
     QTabBar::tab:selected {
         /* expand/overlap to the left and right by 4px */
         margin-left: -4px;
         margin-right: -4px;
     }

     QTabBar::tab:first:selected {
         margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
     }

     QTabBar::tab:last:selected {
         margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
     }

     QTabBar::tab:only-one {
         margin: 0; /* if there is only one tab, we don't want overlapping margins */
     }</string>
      </property>
      <property name="currentIndex">
       <number>0</number>
      </property>
      <widget class="QWidget" name="tab_5">
       <attribute name="title">
        <string>Log file</string>
       </attribute>
       <layout class="QHBoxLayout" name="horizontalLayout">
        <item>
         <widget class="QTextEdit" name="textEdit"/>
        </item>
       </layout>
      </widget>
     </widget>
    </item>
   </layout>
   <zorder>gridLayoutWidget</zorder>
   <zorder>gridLayoutWidget</zorder>
   <zorder>listView</zorder>
   <zorder>tabWidget</zorder>
  </widget>
  <widget class="QDockWidget" name="dockWidget_3">
   <property name="minimumSize">
    <size>
     <width>250</width>
     <height>213</height>
    </size>
   </property>
   <attribute name="dockWidgetArea">
    <number>1</number>
   </attribute>
   <widget class="QWidget" name="dockWidgetContents_3">
    <layout class="QHBoxLayout" name="horizontalLayout_2">
     <item>
      <widget class="QToolBox" name="toolBox_2">
       <property name="styleSheet">
        <string notr="true">QToolBox::tab {
         background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                     stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
         border-radius: 5px;
         color: darkgray;
     }

     QToolBox::tab:selected { /* italicize selected tabs */
         font: italic;
         color: white;
     }</string>
       </property>
       <property name="currentIndex">
        <number>1</number>
       </property>
       <widget class="QWidget" name="page_3">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>232</width>
          <height>449</height>
         </rect>
        </property>
        <attribute name="label">
         <string>Bookmarks</string>
        </attribute>
        <layout class="QHBoxLayout" name="horizontalLayout_3">
         <item>
          <widget class="QListView" name="listView"/>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="page_4">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>232</width>
          <height>449</height>
         </rect>
        </property>
        <attribute name="label">
         <string>Grep</string>
        </attribute>
        <widget class="QPushButton" name="pushButton_2">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>370</y>
           <width>111</width>
           <height>51</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">     QPushButton {
         border: 2px solid #8f8f91;
         border-radius: 6px;
         background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                           stop: 0 #f6f7fa, stop: 1 #dadbde);
         min-width: 80px;
     }

     QPushButton:pressed {
         background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                           stop: 0 #dadbde, stop: 1 #f6f7fa);
     }

     QPushButton:flat {
         border: none; /* no border for a flat push button */
     }

     QPushButton:default {
         border-color: navy; /* make the default button prominent */
     }</string>
         </property>
         <property name="text">
          <string>GREP</string>
         </property>
        </widget>
        <widget class="QPlainTextEdit" name="plainTextEdit_2">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>210</y>
           <width>231</width>
           <height>151</height>
          </rect>
         </property>
        </widget>
        <widget class="QSpinBox" name="spinBox">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>10</y>
           <width>91</width>
           <height>31</height>
          </rect>
         </property>
        </widget>
        <widget class="QLabel" name="label">
         <property name="geometry">
          <rect>
           <x>110</x>
           <y>10</y>
           <width>111</width>
           <height>31</height>
          </rect>
         </property>
         <property name="text">
          <string>GREPPED SIZE</string>
         </property>
        </widget>
        <widget class="QPushButton" name="pushButton_3">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>50</y>
           <width>91</width>
           <height>23</height>
          </rect>
         </property>
         <property name="styleSheet">
          <string notr="true">     QPushButton {
         border: 2px solid #8f8f91;
         border-radius: 6px;
         background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                           stop: 0 #f6f7fa, stop: 1 #dadbde);
         min-width: 80px;
     }

     QPushButton:pressed {
         background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                           stop: 0 #dadbde, stop: 1 #f6f7fa);
     }

     QPushButton:flat {
         border: none; /* no border for a flat push button */
     }

     QPushButton:default {
         border-color: navy; /* make the default button prominent */
     }</string>
         </property>
         <property name="text">
          <string>COLOR</string>
         </property>
        </widget>
        <widget class="QCheckBox" name="checkBox">
         <property name="geometry">
          <rect>
           <x>110</x>
           <y>50</y>
           <width>91</width>
           <height>31</height>
          </rect>
         </property>
         <property name="text">
          <string>SHADOWED</string>
         </property>
        </widget>
        <widget class="QCheckBox" name="checkBox_2">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>90</y>
           <width>151</width>
           <height>31</height>
          </rect>
         </property>
         <property name="text">
          <string>Line mode</string>
         </property>
        </widget>
        <widget class="QCheckBox" name="checkBox_3">
         <property name="geometry">
          <rect>
           <x>110</x>
           <y>90</y>
           <width>101</width>
           <height>31</height>
          </rect>
         </property>
         <property name="text">
          <string>Word mode</string>
         </property>
        </widget>
       </widget>
       <widget class="QWidget" name="page_5">
        <attribute name="label">
         <string>Relations</string>
        </attribute>
        <layout class="QVBoxLayout" name="verticalLayout">
         <item>
          <widget class="QTreeView" name="treeView_2"/>
         </item>
        </layout>
       </widget>
      </widget>
     </item>
    </layout>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menuBar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>949</width>
     <height>24</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true"> QMenuBar {
     background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                                       stop:0 lightgray, stop:1 darkgray);
 }

 QMenuBar::item {
     spacing: 3px; /* spacing between menu bar items */
     padding: 1px 4px;
     background: transparent;
     border-radius: 4px;
 }

 QMenuBar::item:selected { /* when selected using mouse or keyboard */
     background: #a8a8a8;
 }

 QMenuBar::item:pressed {
     background: #888888;
 }</string>
   </property>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>File</string>
    </property>
    <addaction name="actionOpen_2"/>
   </widget>
   <addaction name="menuFile"/>
  </widget>
  <action name="actionOpen">
   <property name="text">
    <string>Open</string>
   </property>
  </action>
  <action name="actionOpen_2">
   <property name="text">
    <string>Open</string>
   </property>
  </action>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <resources/>
 <connections/>
</ui>
